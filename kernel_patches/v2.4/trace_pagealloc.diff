--- linux-2.4.20-clean/mm/page_alloc.c	Thu Nov 28 23:53:15 2002
+++ linux-2.4.20-vmr/mm/page_alloc.c	Sun Jun 29 15:56:22 2003
@@ -43,6 +43,23 @@
 static int zone_balance_min[MAX_NR_ZONES] __initdata = { 20 , 20, 20, };
 static int zone_balance_max[MAX_NR_ZONES] __initdata = { 255 , 255, 255, };
 
+/* 
+ * VM Regress allocation counters
+ */
+unsigned long kernel_allocs[MAX_ORDER];
+unsigned long user_allocs[MAX_ORDER];
+EXPORT_SYMBOL(kernel_allocs);
+EXPORT_SYMBOL(user_allocs);
+
+/* VM Regress: Page alloc callback */
+void tracealloc_callback(unsigned int gfp_mask, unsigned int order) {
+	if (order >= MAX_ORDER) return;
+
+	if (gfp_mask & __GFP_USER) user_allocs[order]++;
+	else kernel_allocs[order]++;
+} 
+
+
 /*
  * Temporary debugging check.
  */
@@ -335,6 +352,10 @@
 	classzone = *zone;
 	if (classzone == NULL)
 		return NULL;
+
+	/* VM Regress: Trace page allocations */
+	tracealloc_callback(gfp_mask, order);
+
 	min = 1UL << order;
 	for (;;) {
 		zone_t *z = *(zone++);

--- linux-2.4.20-clean/include/linux/mm.h	Sat Aug  3 01:39:45 2002
+++ linux-2.4.20-vmr/include/linux/mm.h	Sun Jun 29 17:21:02 2003
@@ -599,13 +599,14 @@
 #define __GFP_IO	0x40	/* Can start low memory physical IO? */
 #define __GFP_HIGHIO	0x80	/* Can start high mem physical IO? */
 #define __GFP_FS	0x100	/* Can call down to low-level FS? */
+#define __GFP_USER	0x200   /* VM Regress: flags user allocation */
 
 #define GFP_NOHIGHIO	(__GFP_HIGH | __GFP_WAIT | __GFP_IO)
 #define GFP_NOIO	(__GFP_HIGH | __GFP_WAIT)
 #define GFP_NOFS	(__GFP_HIGH | __GFP_WAIT | __GFP_IO | __GFP_HIGHIO)
 #define GFP_ATOMIC	(__GFP_HIGH)
-#define GFP_USER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS)
-#define GFP_HIGHUSER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS | __GFP_HIGHMEM)
+#define GFP_USER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS | __GFP_USER)
+#define GFP_HIGHUSER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS | __GFP_USER | __GFP_HIGHMEM)
 #define GFP_KERNEL	(__GFP_HIGH | __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS)
 #define GFP_NFS		(__GFP_HIGH | __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS)
 #define GFP_KSWAPD	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS)
@@ -671,6 +672,9 @@
 extern struct vm_area_struct *find_extend_vma(struct mm_struct *mm, unsigned long addr);
 
 extern struct page * vmalloc_to_page(void *addr);
+
+/* VM Regress: define to indicate tracing callbacks is enabled */
+#define TRACE_PAGE_ALLOCS
 
 #endif /* __KERNEL__ */
 
--- linux-2.4.20-clean/include/linux/slab.h	Sun Jun 29 17:21:06 2003
+++ linux-2.4.20-vmr/include/linux/slab.h	Sun Jun 29 17:50:03 2003
@@ -24,7 +24,7 @@
 #define	SLAB_NFS		GFP_NFS
 #define	SLAB_DMA		GFP_DMA
 
-#define SLAB_LEVEL_MASK		(__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_HIGHIO|__GFP_FS)
+#define SLAB_LEVEL_MASK		(__GFP_WAIT|__GFP_HIGH|__GFP_IO|__GFP_HIGHIO|__GFP_FS|__GFP_USER)
 #define	SLAB_NO_GROW		0x00001000UL	/* don't grow a cache */
 
 /* flags to pass to kmem_cache_create().
